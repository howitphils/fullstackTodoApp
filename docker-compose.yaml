#В этом файле можно запускать несколько контейнеров одновременно (даже без отдельного dockerfile) и тут же настраивать их взаимодействие
services:
  app:
    build: . # Запустит dockerfile который находится в этой же папке
    container_name: todo-app
    develop:
      watch:
        - action: sync+restart
          path: .
          target: /app
    environment: #Замена .env файлу
      - DATABASE_URL=postgresql://postgres:postgres@db:5432/todoapp
      - JWT_SECRET=daskdasdk
      - NODE_ENV=development
      - PORT=9000
    ports:
      - "9000:9000" #Сопоставляем внешний порт (хоста(мой компьютер)) и внутренний порт контейнера
      - "9229:9229" #Для дебага
    depends_on:
      - db #название сервиса, от которого зависит этот контейнер и который должен быть запущен до этого
    command: npm run dev
  db:
    image: postgres:13-alpine #Файл докера не создавался, поэтому скачиваем готовую image с docker hub
    container_name: postgres-db
    environment:
      - POSTGRES_USER=postgres
      - POSTGRES_PASSWORD=postgres
      - POSTGRES_DB=todoapp #Имя базы данных (написано в конце DATABASE_URL в сервисе app)
    ports:
      - "5432:5432"
    volumes:
      #Используем созданный ниже volume (postgres-data) для копирования данных из дб и мапим с папкой, в которой хранятся данные в самой базе данных
      - postgres-data:/var/lib/postgresql/data #Сохраняем все изменения в базе, чтобы не начинать с чистого листа после перезапуска контейнера
#Создаем volume для сохранения данных из дб
volumes:
  postgres-data:
